# Namespace where Cassandra Operator will live
apiVersion: v1
kind: Namespace
metadata:
  name: rook-cassandra-system # namespace:operator
---
# ClusterRole for cassandra-operator.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rook-cassandra-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - "*"
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
      - persistentvolumeclaims
    verbs:
      - get
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - "*"
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - create
  - apiGroups:
      - cassandra.rook.io
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - update
      - patch
---
# ServiceAccount for cassandra-operator. Serves as its authorization identity.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rook-cassandra-operator
  namespace: rook-cassandra-system # namespace:operator
---
# Bind cassandra-operator ServiceAccount with ClusterRole.
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rook-cassandra-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-cassandra-operator
subjects:
  - kind: ServiceAccount
    name: rook-cassandra-operator
    namespace: rook-cassandra-system # namespace:operator
---
# cassandra-operator StatefulSet.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rook-cassandra-operator
  namespace: cassandra-ns-system # namespace:operator
  labels:
    app: rook-cassandra-operator
spec:
  replicas: 1
  serviceName: "non-existent-service"
  selector:
    matchLabels:
      app: rook-cassandra-operator
  template:
    metadata:
      labels:
        app: rook-cassandra-operator
    spec:
      serviceAccountName: rook-cassandra-operator
      containers:
        - name: rook-cassandra-operator
          image: rook/cassandra:v1.7.3
          imagePullPolicy: IfNotPresent
          args: ["cassandra", "operator"]
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
